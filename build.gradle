buildscript {
    ext.kotlinVersion = '1.9.10'
    ext.ktlintVersion = '1.0.1'
    ext.junitVersion = '4.12'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.10"
        classpath "org.apache.commons:commons-text:1.9"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "io.github.tobi2k"
archivesBaseName = "ktlint-gitlab-reporter"
version = "2.0.1"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.10'
    implementation 'com.pinterest.ktlint:ktlint-cli-reporter-core:1.0.1'
    implementation 'org.apache.commons:commons-text:1.10.0'
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'ktlint-gitlab-reporter'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'ktlint GitLab reporter'
                description = 'A GitLab compatible JSON reporter for ktlint'
                url = 'https://github.com/Tobi2K/ktlint-gitlab-reporter'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'tobi2k'
                        name = 'Tobias Kalmbach'
                        email = 'tobias@kalmbach.dev'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Tobi2K/ktlint-gitlab-reporter'
                    developerConnection = 'scm:git:ssh://github.com:Tobi2K/ktlint-gitlab-reporter.git'
                    url = 'https://github.com/Tobi2K/ktlint-gitlab-reporter'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
